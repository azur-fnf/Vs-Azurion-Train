-- ====== CONFIGURAÇÃO ======
local autoActivateBotplay = true        -- true: ativa botplay automaticamente
local countCpuHitsAsPlayer = true        -- contabiliza hits do bot
local pointsPerMiss = -10                -- pontos por erro
local showHits = false                    -- mostrar hits na HUD
local showCombo = false                   -- mostrar combo na HUD
local botplaytext = ""            -- texto custom do botplay

-- Escolha do tipo de rating
local usePsychEngineRatings = true       -- true = usa rating padrão Psych Engine

-- Ratings customizáveis
local customRatings = {
    {0.999, 'Perfect Accuracy!!'},
    {0.995, 'Insane Accuracy!'},
    {0.990, 'Masterful'},
    {0.975, 'Excellent'},
    {0.960, 'Great Job'},
    {0.940, 'Solid Performance'},
    {0.920, 'Above Average'},
    {0.880, 'Good'},
    {0.800, 'Mediocre'},
    {0.600, 'Struggling'},
    {0.000, 'Failure...'}
}

-- Ratings padrão Psych Engine
local psychRatings = {
    {0.999, "Perfect!!"},
    {0.900, "Sick!"},
    {0.800, "Great"},
    {0.700, "Good"},
    {0.550, "Meh"},
    {0.400, "Bruh"},
    {0.250, "Bad"},
    {0.000, "You Suck!"}
}

-- ===========================
-- VARIÁVEIS INTERNAS
-- ===========================
local playerHits = 0
local playerMisses = 0
local playerCombo = 0

-- ===========================
-- FUNÇÕES
-- ===========================
function onCreatePost()
    -- Ativa o botplay se a opção estiver ligada
    setProperty('cpuControlled', autoActivateBotplay)
    local botActive = getProperty('cpuControlled')

    setProperty('botplayTxt.visible', botActive)
    setProperty('botplayTxt.text', botplaytext)

    updateHUD()
end

function onUpdatePost(elapsed)
    -- Atualiza texto do botplay dinamicamente
    local botActive = getProperty('cpuControlled')
    setProperty('botplayTxt.visible', botActive)
    setProperty('botplayTxt.text', botplaytext)

    updateHUD()
end

-- Acerto de nota
function goodNoteHit(id, direction, noteType, isSustainNote)
    if isSustainNote then return end
    if getProperty('cpuControlled') and not countCpuHitsAsPlayer then return end

    playerHits = playerHits + 1
    playerCombo = playerCombo + 1

    -- pegar julgamento correto
    local rating = getPropertyFromGroup('notes', id, 'rating')
    local points = 0
    if rating == 'sick' then
        points = 350
    elseif rating == 'good' then
        points = 200
    elseif rating == 'bad' then
        points = 100
    elseif rating == 'shit' then
        points = 50
    end

    local cur = tonumber(getProperty('songScore')) or 0
    setProperty('songScore', cur + points)

    setProperty('songMisses', math.max(0, getProperty('songMisses') or 0))
    updateRating()
    pulseScoreText()
end

-- Erro de nota
function noteMiss(id, direction, noteType, isSustainNote)
    if isSustainNote then return end
    if getProperty('cpuControlled') and not countCpuHitsAsPlayer then return end

    playerMisses = playerMisses + 1
    playerCombo = 0

    if pointsPerMiss ~= 0 then
        local cur = tonumber(getProperty('songScore')) or 0
        setProperty('songScore', math.max(0, cur - pointsPerMiss))
    end

    updateRating()
    pulseScoreText()
end

-- Oponente não conta score
function opponentNoteHit(id, direction, noteType, isSustainNote) end

-- Atualiza rating
function updateRating()
    local hits = playerHits
    local misses = playerMisses
    local total = hits + misses
    local pct = 1

    if total > 0 then
        pct = hits / total
    end

    setProperty('ratingPercent', pct)

    -- porcentagem sem casas decimais
    local percentText = string.format("(%d%%)", math.floor(pct * 100))

    local ratingsTable = usePsychEngineRatings and psychRatings or customRatings
    local ratingLabelBase = '---'
    for _, rating in ipairs(ratingsTable) do
        if pct >= rating[1] then
            ratingLabelBase = rating[2]
            break
        end
    end

    -- sufixos extras
    local extra = ""
    if misses == 0 and pct == 1 then
        extra = " - SFC"
    elseif misses == 0 and pct < 1 then
        extra = " - GFC"
    else
        if string.find(ratingLabelBase, "Sick") then
            extra = " - SDCB"
        elseif pct >= 0.90 then
            extra = " - GFC"
        elseif pct >= 0.75 then
            extra = " - NFC"
        else
            extra = " - SDCB"
        end
    end

    local finalName = ratingLabelBase .. " " .. percentText .. extra
    setProperty('ratingName', finalName)
    updateHUD()
end

-- HUD
function updateHUD()
    local curScore = math.floor(tonumber(getProperty('songScore')) or 0)
    local rating = getProperty('ratingName') or '---'
    local text = 'Score: ' .. curScore

    if showHits then
        text = text .. ' | Hits: ' .. playerHits
    end
    if showCombo then
        text = text .. ' | Combo: ' .. playerCombo
    end

    text = text .. ' | Misses: ' .. playerMisses .. ' | Rating: ' .. rating
    setTextString('scoreTxt', text)
end

-- efeito de "pulse" no score
function pulseScoreText()
    runHaxeCode([[
        if (game.scoreTxtTween != null)
            game.scoreTxtTween.cancel();
        game.scoreTxt.scale.x = 1.075;
        game.scoreTxt.scale.y = 1.075;
        game.scoreTxtTween = FlxTween.tween(game.scoreTxt.scale, {x:1, y:1}, 0.2, {
            onComplete: function(twn:FlxTween) {
                game.scoreTxtTween = null;
            }
        });
    ]])
end
